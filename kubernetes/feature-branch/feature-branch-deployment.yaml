---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{APP_NAME}}-api-{{FEATURE_BRANCH_NAME}}
  labels:
    app: {{APP_NAME}}-api-{{FEATURE_BRANCH_NAME}}
spec:
  replicas: {{REPLICAS}}
  selector:
    matchLabels:
      app: {{APP_NAME}}-api-{{FEATURE_BRANCH_NAME}}
  template:
    metadata:
      labels:
        app: {{APP_NAME}}-api-{{FEATURE_BRANCH_NAME}}
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{APP_NAME}}-api-{{FEATURE_BRANCH_NAME}}
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{APP_NAME}}-api-{{FEATURE_BRANCH_NAME}}
      serviceAccountName: {{SERVICE_ACCOUNT_NAME}}
      containers:
        - name: {{APP_NAME}}-api-container
          image: {{BACKEND_IMAGE}}
          imagePullPolicy: {{IMAGE_PULL_POLICY}}  # e.g., IfNotPresent, Always
          env:
            - name: ENVIRONMENT
              value: "{{ENVIRONMENT}}"  # e.g., ENVIRONMENT, staging, production
          ports:
            - name: app
              containerPort: {{APP_CONTAINER_PORT}}  # e.g., 8003
            - name: metrics
              containerPort: {{METRICS_CONTAINER_PORT}}  # e.g., 8001
          resources:
            limits:
              memory: "{{MEMORY_LIMIT}}"  # e.g., "500Mi"
            requests:
              memory: "{{MEMORY_REQUEST}}"  # e.g., "100Mi"
              cpu: "{{CPU_REQUEST}}"  # e.g., "100m"
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - 'curl -s http://localhost:{{APP_CONTAINER_PORT}}/health | python -c "import sys, json; response=json.load(sys.stdin); sys.exit(0) if response.get(\"status\") == \"OK\" else s
